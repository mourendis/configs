---
- name: Ensure root folders exist.
  file:
    state: directory
    path: '{{ item.path }}'
    mode: '{{ item.mode }}'
  loop: '{{ root_required_directories }}'
  tags:
    - root
    - sudo
    - folder

- name: Ensure required users exist.
  user:
    name: '{{ item.name }}'
    create_home: '{{ item.create_home }}'
  loop: '{{ required_users }}'

- name: Ensure user required directories exist.
  file:
    state: directory
    path: '{{ item.path }}'
    owner: '{{ item.name }}'
    group: '{{ item.group }}'
  loop: '{{ user_required_directories }}'
  tags:
    - user
    - folder

- name: Ensure required groups exist.
  group:
    name: '{{ item.name }}'
  loop: '{{ required_groups }}'

- name: Ensure that groups are assigned to users.
  user:
    name: '{{ item.name }}'
    append: true
    groups: '{{ item.groups }}'
  loop: '{{ required_user_groups }}'

- name: Include package manager update
  include_tasks: "{{ ansible_pkg_mgr }}.yml"

- name: Ensure packages are installed and up to date.
  package:
    name: '{{ item }}'
    state: latest
  loop: '{{ packages }}'
  tags:
    - sudo
    - package

- name: Ensure service packages are installed and up to date.
  package:
    name: '{{ item.package }}'
    state: latest
  register: services_state
  loop: '{{ service_packages }}'
  notify: services
  tags:
    - sudo
    - package

- name: Ensure zsh is default shell.
  shell: "chsh -s $(which zsh)"
  when: ansible_user_shell != "/usr/bin/zsh"
  tags:
    - user

- name: Ensure root required files from templates are up to date.
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: '{{ item.mode }}'
  loop: '{{ root_required_templates }}'
  tags:
    - root
    - template

- name: Ensure root required service files from templates are up to date.
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: '{{ item.mode }}'
  register: root_service_templates
  loop: '{{ root_required_service_templates }}'
  notify: configured_services
  tags:
    - root
    - sudo
    - service-template

- name: Ensure user required files from templates are up to date.
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: '{{ item.mode }}'
    owner: '{{ username }}'
    group: '{{ usergroup }}'
  loop: '{{ user_required_templates }}'
  tags:
    - user
    - template

- name: Ensure user required process files from templates are up to date.
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: '{{ item.mode }}'
    owner: '{{ username }}'
    group: '{{ usergroup }}'
  loop: '{{ user_required_process_templates }}'
  notify: user_configured_processes
  tags:
    - user
    - template

- name: Ensure user unwanted files doesn't exist.
  file:
    state: absent
    path: '/home/{{ username }}/{{ item }}'
  loop: '{{ user_unwanted_files }}'
  tags:
    - user
    - delete
